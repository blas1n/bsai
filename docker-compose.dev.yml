services:
  # Development container
  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      args:
        PYTHON_VERSION: "3.11"
    volumes:
      # Bind mount source code for live editing
      - .:/workspace:cached
    command: sleep infinity
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/bsai
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bsai-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bsai-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: bsai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bsai"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bsai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bsai-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "" --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - bsai-network

  # Prometheus (optional, can be started separately)
  prometheus:
    image: prom/prometheus:latest
    container_name: bsai-prometheus-dev
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - "9090:9090"
    profiles:
      - monitoring
    networks:
      - bsai-network

  # Grafana (optional, can be started separately)
  grafana:
    image: grafana/grafana:latest
    container_name: bsai-grafana-dev
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    profiles:
      - monitoring
    depends_on:
      - prometheus
    networks:
      - bsai-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  bsai-network:
    driver: bridge
